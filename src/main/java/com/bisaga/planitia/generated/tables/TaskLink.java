/**
 * This class is generated by jOOQ
 */
package com.bisaga.planitia.generated.tables;


import com.bisaga.planitia.generated.Keys;
import com.bisaga.planitia.generated.Public;
import com.bisaga.planitia.generated.tables.records.TaskLinkRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskLink extends TableImpl<TaskLinkRecord> {

    private static final long serialVersionUID = -1537896166;

    /**
     * The reference instance of <code>public.task_link</code>
     */
    public static final TaskLink TASK_LINK = new TaskLink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TaskLinkRecord> getRecordType() {
        return TaskLinkRecord.class;
    }

    /**
     * The column <code>public.task_link.id</code>.
     */
    public final TableField<TaskLinkRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('task_link_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.task_link.task_id</code>.
     */
    public final TableField<TaskLinkRecord, Integer> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.task_link.subtask_id</code>.
     */
    public final TableField<TaskLinkRecord, Integer> SUBTASK_ID = createField("subtask_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.task_link</code> table reference
     */
    public TaskLink() {
        this("task_link", null);
    }

    /**
     * Create an aliased <code>public.task_link</code> table reference
     */
    public TaskLink(String alias) {
        this(alias, TASK_LINK);
    }

    private TaskLink(String alias, Table<TaskLinkRecord> aliased) {
        this(alias, aliased, null);
    }

    private TaskLink(String alias, Table<TaskLinkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TaskLinkRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TASK_LINK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TaskLinkRecord> getPrimaryKey() {
        return Keys.TASK_LINK_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TaskLinkRecord>> getKeys() {
        return Arrays.<UniqueKey<TaskLinkRecord>>asList(Keys.TASK_LINK_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskLink as(String alias) {
        return new TaskLink(alias, this);
    }

    /**
     * Rename this table
     */
    public TaskLink rename(String name) {
        return new TaskLink(name, null);
    }
}
