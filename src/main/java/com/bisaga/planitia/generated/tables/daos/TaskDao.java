/**
 * This class is generated by jOOQ
 */
package com.bisaga.planitia.generated.tables.daos;


import com.bisaga.planitia.generated.tables.Task;
import com.bisaga.planitia.generated.tables.records.TaskRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskDao extends DAOImpl<TaskRecord, com.bisaga.planitia.generated.tables.pojos.Task, Integer> {

    /**
     * Create a new TaskDao without any configuration
     */
    public TaskDao() {
        super(Task.TASK, com.bisaga.planitia.generated.tables.pojos.Task.class);
    }

    /**
     * Create a new TaskDao with an attached configuration
     */
    public TaskDao(Configuration configuration) {
        super(Task.TASK, com.bisaga.planitia.generated.tables.pojos.Task.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.bisaga.planitia.generated.tables.pojos.Task object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Task> fetchById(Integer... values) {
        return fetch(Task.TASK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bisaga.planitia.generated.tables.pojos.Task fetchOneById(Integer value) {
        return fetchOne(Task.TASK.ID, value);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Task> fetchByCode(String... values) {
        return fetch(Task.TASK.CODE, values);
    }

    /**
     * Fetch records that have <code>summary IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Task> fetchBySummary(String... values) {
        return fetch(Task.TASK.SUMMARY, values);
    }

    /**
     * Fetch records that have <code>story IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Task> fetchByStory(Integer... values) {
        return fetch(Task.TASK.STORY, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Task> fetchByDescription(String... values) {
        return fetch(Task.TASK.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>assigned_by IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Task> fetchByAssignedBy(Integer... values) {
        return fetch(Task.TASK.ASSIGNED_BY, values);
    }

    /**
     * Fetch records that have <code>assignee IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Task> fetchByAssignee(Integer... values) {
        return fetch(Task.TASK.ASSIGNEE, values);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Task> fetchByCreatedOn(Timestamp... values) {
        return fetch(Task.TASK.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Task> fetchByCreatedBy(String... values) {
        return fetch(Task.TASK.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>modified_on IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Task> fetchByModifiedOn(Timestamp... values) {
        return fetch(Task.TASK.MODIFIED_ON, values);
    }

    /**
     * Fetch records that have <code>modified_by IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Task> fetchByModifiedBy(String... values) {
        return fetch(Task.TASK.MODIFIED_BY, values);
    }
}
