/**
 * This class is generated by jOOQ
 */
package com.bisaga.planitia.generated.tables.daos;


import com.bisaga.planitia.generated.tables.Story;
import com.bisaga.planitia.generated.tables.records.StoryRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoryDao extends DAOImpl<StoryRecord, com.bisaga.planitia.generated.tables.pojos.Story, Integer> {

    /**
     * Create a new StoryDao without any configuration
     */
    public StoryDao() {
        super(Story.STORY, com.bisaga.planitia.generated.tables.pojos.Story.class);
    }

    /**
     * Create a new StoryDao with an attached configuration
     */
    public StoryDao(Configuration configuration) {
        super(Story.STORY, com.bisaga.planitia.generated.tables.pojos.Story.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.bisaga.planitia.generated.tables.pojos.Story object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Story> fetchById(Integer... values) {
        return fetch(Story.STORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bisaga.planitia.generated.tables.pojos.Story fetchOneById(Integer value) {
        return fetchOne(Story.STORY.ID, value);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Story> fetchByCode(String... values) {
        return fetch(Story.STORY.CODE, values);
    }

    /**
     * Fetch records that have <code>summary IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Story> fetchBySummary(String... values) {
        return fetch(Story.STORY.SUMMARY, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Story> fetchByDescription(String... values) {
        return fetch(Story.STORY.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>author IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Story> fetchByAuthor(Integer... values) {
        return fetch(Story.STORY.AUTHOR, values);
    }

    /**
     * Fetch records that have <code>reporter IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Story> fetchByReporter(Integer... values) {
        return fetch(Story.STORY.REPORTER, values);
    }

    /**
     * Fetch records that have <code>epic IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Story> fetchByEpic(Integer... values) {
        return fetch(Story.STORY.EPIC, values);
    }

    /**
     * Fetch records that have <code>created_on IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Story> fetchByCreatedOn(Timestamp... values) {
        return fetch(Story.STORY.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Story> fetchByCreatedBy(String... values) {
        return fetch(Story.STORY.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>modified_on IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Story> fetchByModifiedOn(Timestamp... values) {
        return fetch(Story.STORY.MODIFIED_ON, values);
    }

    /**
     * Fetch records that have <code>modified_by IN (values)</code>
     */
    public List<com.bisaga.planitia.generated.tables.pojos.Story> fetchByModifiedBy(String... values) {
        return fetch(Story.STORY.MODIFIED_BY, values);
    }
}
