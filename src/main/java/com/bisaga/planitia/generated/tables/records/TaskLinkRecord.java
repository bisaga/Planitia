/**
 * This class is generated by jOOQ
 */
package com.bisaga.planitia.generated.tables.records;


import com.bisaga.planitia.generated.tables.TaskLink;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "task_link", schema = "public")
public class TaskLinkRecord extends UpdatableRecordImpl<TaskLinkRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 703079196;

    /**
     * Setter for <code>public.task_link.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.task_link.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 32)
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.task_link.task_id</code>.
     */
    public void setTaskId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.task_link.task_id</code>.
     */
    @Column(name = "task_id", nullable = false, precision = 32)
    public Integer getTaskId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.task_link.subtask_id</code>.
     */
    public void setSubtaskId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.task_link.subtask_id</code>.
     */
    @Column(name = "subtask_id", nullable = false, precision = 32)
    public Integer getSubtaskId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return TaskLink.TASK_LINK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return TaskLink.TASK_LINK.TASK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return TaskLink.TASK_LINK.SUBTASK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getTaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSubtaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskLinkRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskLinkRecord value2(Integer value) {
        setTaskId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskLinkRecord value3(Integer value) {
        setSubtaskId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskLinkRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskLinkRecord
     */
    public TaskLinkRecord() {
        super(TaskLink.TASK_LINK);
    }

    /**
     * Create a detached, initialised TaskLinkRecord
     */
    public TaskLinkRecord(Integer id, Integer taskId, Integer subtaskId) {
        super(TaskLink.TASK_LINK);

        set(0, id);
        set(1, taskId);
        set(2, subtaskId);
    }
}
