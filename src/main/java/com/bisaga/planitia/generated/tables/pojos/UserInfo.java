/**
 * This class is generated by jOOQ
 */
package com.bisaga.planitia.generated.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_info", schema = "public")
public class UserInfo implements Serializable {

    private static final long serialVersionUID = 1627636846;

    private Integer   id;
    private String    externalId;
    private String    userName;
    private Boolean   isActive;
    private String    email;
    private Timestamp createdOn;
    private String    createdBy;
    private Timestamp modifiedOn;
    private String    modifiedBy;

    public UserInfo() {}

    public UserInfo(UserInfo value) {
        this.id = value.id;
        this.externalId = value.externalId;
        this.userName = value.userName;
        this.isActive = value.isActive;
        this.email = value.email;
        this.createdOn = value.createdOn;
        this.createdBy = value.createdBy;
        this.modifiedOn = value.modifiedOn;
        this.modifiedBy = value.modifiedBy;
    }

    public UserInfo(
        Integer   id,
        String    externalId,
        String    userName,
        Boolean   isActive,
        String    email,
        Timestamp createdOn,
        String    createdBy,
        Timestamp modifiedOn,
        String    modifiedBy
    ) {
        this.id = id;
        this.externalId = externalId;
        this.userName = userName;
        this.isActive = isActive;
        this.email = email;
        this.createdOn = createdOn;
        this.createdBy = createdBy;
        this.modifiedOn = modifiedOn;
        this.modifiedBy = modifiedBy;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 32)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "external_id", nullable = false)
    public String getExternalId() {
        return this.externalId;
    }

    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    @Column(name = "user_name", nullable = false)
    public String getUserName() {
        return this.userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    @Column(name = "is_active")
    public Boolean getIsActive() {
        return this.isActive;
    }

    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    @Column(name = "email")
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "created_on")
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    @Column(name = "created_by", nullable = false)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "modified_on")
    public Timestamp getModifiedOn() {
        return this.modifiedOn;
    }

    public void setModifiedOn(Timestamp modifiedOn) {
        this.modifiedOn = modifiedOn;
    }

    @Column(name = "modified_by")
    public String getModifiedBy() {
        return this.modifiedBy;
    }

    public void setModifiedBy(String modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserInfo (");

        sb.append(id);
        sb.append(", ").append(externalId);
        sb.append(", ").append(userName);
        sb.append(", ").append(isActive);
        sb.append(", ").append(email);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(modifiedOn);
        sb.append(", ").append(modifiedBy);

        sb.append(")");
        return sb.toString();
    }
}
