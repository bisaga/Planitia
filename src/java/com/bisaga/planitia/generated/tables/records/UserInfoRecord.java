/**
 * This class is generated by jOOQ
 */
package com.bisaga.planitia.generated.tables.records;


import com.bisaga.planitia.generated.tables.UserInfo;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_info", schema = "public")
public class UserInfoRecord extends UpdatableRecordImpl<UserInfoRecord> implements Record9<Integer, String, String, Boolean, String, Timestamp, String, Timestamp, String> {

    private static final long serialVersionUID = -1376257541;

    /**
     * Setter for <code>public.user_info.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_info.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 32)
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_info.external_id</code>.
     */
    public void setExternalId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_info.external_id</code>.
     */
    @Column(name = "external_id", nullable = false)
    public String getExternalId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user_info.user_name</code>.
     */
    public void setUserName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_info.user_name</code>.
     */
    @Column(name = "user_name", nullable = false)
    public String getUserName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user_info.is_active</code>.
     */
    public void setIsActive(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_info.is_active</code>.
     */
    @Column(name = "is_active")
    public Boolean getIsActive() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.user_info.email</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user_info.email</code>.
     */
    @Column(name = "email")
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.user_info.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.user_info.created_on</code>.
     */
    @Column(name = "created_on")
    public Timestamp getCreatedOn() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>public.user_info.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.user_info.created_by</code>.
     */
    @Column(name = "created_by", nullable = false)
    public String getCreatedBy() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.user_info.modified_on</code>.
     */
    public void setModifiedOn(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.user_info.modified_on</code>.
     */
    @Column(name = "modified_on")
    public Timestamp getModifiedOn() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>public.user_info.modified_by</code>.
     */
    public void setModifiedBy(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.user_info.modified_by</code>.
     */
    @Column(name = "modified_by")
    public String getModifiedBy() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, Boolean, String, Timestamp, String, Timestamp, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, Boolean, String, Timestamp, String, Timestamp, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return UserInfo.USER_INFO.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return UserInfo.USER_INFO.EXTERNAL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return UserInfo.USER_INFO.USER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return UserInfo.USER_INFO.IS_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return UserInfo.USER_INFO.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return UserInfo.USER_INFO.CREATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return UserInfo.USER_INFO.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return UserInfo.USER_INFO.MODIFIED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return UserInfo.USER_INFO.MODIFIED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getExternalId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUserName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getModifiedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserInfoRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserInfoRecord value2(String value) {
        setExternalId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserInfoRecord value3(String value) {
        setUserName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserInfoRecord value4(Boolean value) {
        setIsActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserInfoRecord value5(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserInfoRecord value6(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserInfoRecord value7(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserInfoRecord value8(Timestamp value) {
        setModifiedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserInfoRecord value9(String value) {
        setModifiedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserInfoRecord values(Integer value1, String value2, String value3, Boolean value4, String value5, Timestamp value6, String value7, Timestamp value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserInfoRecord
     */
    public UserInfoRecord() {
        super(UserInfo.USER_INFO);
    }

    /**
     * Create a detached, initialised UserInfoRecord
     */
    public UserInfoRecord(Integer id, String externalId, String userName, Boolean isActive, String email, Timestamp createdOn, String createdBy, Timestamp modifiedOn, String modifiedBy) {
        super(UserInfo.USER_INFO);

        set(0, id);
        set(1, externalId);
        set(2, userName);
        set(3, isActive);
        set(4, email);
        set(5, createdOn);
        set(6, createdBy);
        set(7, modifiedOn);
        set(8, modifiedBy);
    }
}
